<#@ template language="C#" hostSpecific="true" debug="false" #>
<#@ output extension=".cs" #>
<# 
	EntityHost host = (EntityHost)(Host); 
	EntityInfo entity = host.Entity;	
	string nameSpace = host.GetString("NameSpace");
	string className = host.GetString("ClassName");	
#>
using System;
using System.Collections.Generic;
using System.Text;
using Abp.Application.Services;
using Abp.Domain.Repositories;
using System.Threading.Tasks;
using Abp.Application.Services.Dto;
using System.Linq;
using Abp.AutoMapper;
using Abp.Auditing;
using <#= nameSpace #>.Dto;

namespace <#= nameSpace #>
{	
	public class <#= className #>AppService: AsyncCommonAppService<<#= className #>, <#= className #>Dto>, I<#= className #>AppService
	{	        
		private readonly IRepository<<#=className#>> _repository;
       
        public <#= className #>AppService(IRepository<<#=className#>> repository) : base(repository)
        {
            _repository = repository;
        }
       
	    public List<<#= className #>Dto> Query(<#= className #>QueryDto input)
        {
            var list = _repository.GetAllList(x => x.TenantId == AbpSession.TenantId          
           && (input.FromDate.HasValue ? x.CreationTime >= input.FromDate : 1 == 1)
           && (input.ToDate.HasValue ? x.CreationTime < input.ToDate.Value.AddDays(1) : 1 == 1)).MapTo<List<<#= className #>Dto>>();          
            return list;
        }
        
	}
}