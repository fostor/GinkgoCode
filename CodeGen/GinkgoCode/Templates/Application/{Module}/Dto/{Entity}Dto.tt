<#@ template language="C#" hostSpecific="true" debug="false" #>
<#@ output extension=".cs" #>
<# 
	EntityHost host = (EntityHost)(Host); 
	EntityInfo entity = host.Entity;	
	string nameSpace = host.GetString("NameSpace");
	string className = host.GetString("ClassName");	
	List<string> excludeFields = new List<string> { "Id", "TenantId", "Creator", "CreationTime", "IsDeleted", "Deleter", "DeletionTime", "LastModifier", "LastModificationTime" };
#>
using System;
using System.Collections.Generic;
using System.Text;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using Abp.AutoMapper;

namespace <#= nameSpace #>.Dto
{	
	[AutoMap(typeof(<#= className #>))]
	public class <#= className #>Dto : CommonEntityDto
	{
		<# foreach (FieldInfo c in entity.Fields)
		{
			if(!excludeFields.Contains(c.Name)) {#>
        <#=c.Required==true?"[Required]":""#>   
		<#=c.MaxLength.HasValue?"[MaxLength("+c.MaxLength.Value.ToString()+")]":""#>  
		public <#= c.ShortTypeName #><#= c.Nullable==true?"?":"" #> <#= c.Name #> { get; set; }		
		<# }} #>
		
	}
}